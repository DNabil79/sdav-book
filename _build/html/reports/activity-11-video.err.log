Traceback (most recent call last):
  File "C:\Users\pa-legg\Anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\pa-legg\Anaconda3\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\pa-legg\Anaconda3\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\pa-legg\Anaconda3\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\pa-legg\Anaconda3\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\pa-legg\Anaconda3\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\pa-legg\Anaconda3\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\pa-legg\Anaconda3\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt

def create_plot_of_file(filename):
    plot_data = np.zeros([51200])
    with open(filename, "rb") as f:
        byte = f.read(1)
        counter = 0
        while byte != b'':
            i = int.from_bytes(byte, byteorder='big')
            #print (byte, i, counter)
            plot_data[counter] = i
            counter += 1
            byte = f.read(1)
    print (counter)

    plt.figure(figsize=(50,50))
    plot_data = np.array(plot_data).reshape(-1, 512)
    plt.imshow(plot_data)
    plt.imsave(filename + ".png", plot_data)
    plt.show()
    return plot_data


filename = "./data/short_sample.docx"
create_plot_of_file(filename)
print ("Plot of file: ",  filename)

filename = "./data/short_sample_password.docx"
create_plot_of_file(filename)
print ("Plot of file: ",  filename)

src = "./data/short_sample.docx"

#!pip3 install pycryptodome

from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes
key = get_random_bytes(16)

file_in = open(src, "rb")
data = file_in.read()
file_in.close()

output_file = "./data/short_sample.enc"

from Crypto.Cipher import AES
from Crypto.Util.Padding import pad


# Create cipher object and encrypt the data
cipher = AES.new(key, AES.MODE_CBC) # Create a AES cipher object with the key using the mode CBC
ciphered_data = cipher.encrypt(pad(data, AES.block_size)) # Pad the input data and then encrypt

file_out = open(output_file, "wb") # Open file to write bytes
file_out.write(cipher.iv) # Write the iv to the output file (will be required for decryption)
file_out.write(ciphered_data) # Write the varying length ciphertext to the file (this is the encrypted data)
file_out.close()

filename = "./data/2020_sample_page.enc"
create_plot_of_file(filename)
print ("Plot of file: ",  filename)

------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                       Traceback (most recent call last)
[1;32m~\AppData\Local\Temp\ipykernel_36024\474976372.py[0m in [0;36m<module>[1;34m[0m
[0;32m     35[0m [1;31m#!pip3 install pycryptodome[0m[1;33m[0m[1;33m[0m[0m
[0;32m     36[0m [1;33m[0m[0m
[1;32m---> 37[1;33m [1;32mfrom[0m [0mCrypto[0m[1;33m.[0m[0mCipher[0m [1;32mimport[0m [0mAES[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m     38[0m [1;32mfrom[0m [0mCrypto[0m[1;33m.[0m[0mRandom[0m [1;32mimport[0m [0mget_random_bytes[0m[1;33m[0m[1;33m[0m[0m
[0;32m     39[0m [0mkey[0m [1;33m=[0m [0mget_random_bytes[0m[1;33m([0m[1;36m16[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;31mModuleNotFoundError[0m: No module named 'Crypto'
ModuleNotFoundError: No module named 'Crypto'

